from VMD import *
from Molecule import *
from atomsel import *


from atomic_fluct import atomic_displ

#import sys

#print sys.path
### Let's load the structure

mol=Molecule()
# mol.load("only_nucl_init.psf")
# mol.load("only_nucl_aligned.pdb")

# mol.load("structs/CCGG.pdb")


mol.load("../analysis_data/only_nucl_init.psf")
mol.load("../analysis_data/only_nucl_init.pdb")
mol.load("../analysis_data/md_nucl.dcd")


#####################################################
# Determining atomic displacements during dinamics from crystal structure
#####################################################
# General rules
# Output: to data frame, we can use PANDAS and save to csv, that can be read by R.

dna=atomsel("nucleic and noh")
prot=atomsel("protein and noh")

dna_ind=dna.get('index')
dna_name=dna.get('name')
dna_xyz=zip(dna.get('x'),dna.get('y'),dna.get('z'))

#dna_xyz=zip(dna.get('x'),dna.get('y'),dna.get('z'))

prot_ind=prot.get('index')
prot_name=prot.get('name')
prot_xyz=zip(prot.get('x'),prot.get('y'),prot.get('z'))


## Now we can call a contact kernel
# Input: coordinates and indices of group A, coordinates ans indices of group B, threshold

contacts=find_contacts(prot_xyz,prot_ind,dna_xyz,dna_ind,4.5,False)

print "DNA protein contacts found: ", len(contacts)

###To-do: discriminate by group and type,
###omit H-bonds

###Here are some display snippets

if(0):
	reps=mol.reps()
	reps[0].changeSelection("(nucleic or protein) and noh")
	a,b,d=zip(*contacts)
	c=0
	for i,j in zip(a,b):
		vdw=MoleculeRep(style='VDW', material='Opaque')
		mol.addRep(vdw)     
		#index=" ".join(map(str,(list(a)+list(b))))
		vdw.changeSelection('index %d %d'%(i,j))
		vdw.changeColor("ColorID %d"%(c%32))
		c=c+1


if(0):
	reps=mol.reps()
	reps[0].changeSelection("(nucleic or protein) and noh")
	a,b,d=zip(*contacts)
	vdw=MoleculeRep(style='VDW', material='Opaque')
	mol.addRep(vdw)     
	index=" ".join(map(str,(list(a))))
	vdw.changeSelection('index %s'%index)
	# vdw.changeColor("ColorID %d"%(c%32))

# mol load psf only_nucl_init.psf
# mol addfile only_nucl_aligned.pdb waitfor all


# set hlist [list "segname CHA" "segname CHE" "segname CHB" "segname CHF" "segname CHC" "segname CHG" "segname CHD" "segname CHH"]
# set hname [list "H3_A" "H3_E" "H4_B" "H4_F" "H2A_C" "H2A_G" "H2B_D" "H2B_H"]




# set nframes [expr  [molinfo top get numframes]  ]

# set sel [atomselect top "nucleic"]
# set sel2 [atomselect top "protein"]


# set atoms [$sel list]



# exit
let's do some file output
set chains [list CHA CHE CHB CHF CHC CHG CHD CHH CHI CHJ]
set chains_names [list H3_1 H3_2 H4_1 H4_2 H2A_1 H2A_2 H2B_1 H2B_2 DNA_I DNA_J]


set outfile [open ../analysis_data/rmsf_chains.dat w]
puts $outfile "RMSF of CA and P atoms of nucleosome"
puts $outfile "Generated by VMD rmsf"
puts $outfile "Residue ID"
puts $outfile "RMSF, A"


set ts "Resid"
foreach segname  $chains_names {
append ts "\t$segname"
}
puts $outfile $ts

for  { set i -73 } { $i<=150 } { incr i } {
set ds "$i"
foreach seg  $chains {

set sel [atomselect top "segname $seg and (name CA P) and resid '$i'"]
if {[$sel num] == 0} { set beta 0
} else {
set  beta [$sel get beta]
}

append ds "\t$beta"

}
puts $outfile $ds
}

